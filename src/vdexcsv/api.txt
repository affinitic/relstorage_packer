
    >>> from vdexcsv import api 
    
Find the field names::

    >>> c2v = api.CSV2VDEX('foo', 'foo.csv', 'foo.xml')
    >>> c2v._fields
    ['key', 'en']

    >>> c2v = api.CSV2VDEX('foo', 'foo.csv', 'foo.xml', langs=['en','de'])
    >>> c2v._fields
    ['key', 'en', 'de']

    >>> c2v = api.CSV2VDEX('foo', 'foo.csv', 'foo.xml', colkey=3)
    >>> c2v._fields
    ['__genkey-0', 'en', '__genkey-2', 'key']

    >>> c2v = api.CSV2VDEX('foo', 'foo.csv', 'foo.xml', colkey=1)
    >>> c2v._fields
    Traceback (most recent call last):
    ...
    ValueError: key column is in same range as value columns
    
Get the CSV, first flat::   

    >>> import os
    >>> testdatadir =  os.path.join(os.path.dirname(api.__file__), 'testdata')
    >>> infilename = os.path.join(testdatadir, 'test1.csv')
    >>> c2v = api.CSV2VDEX('test', infilename, 'test1.xml', startrow=1, 
    ...                    langs=['en', 'de'])    
    >>> c2v._csvdict
    OrderedDict([('100', ['hundered', 'hundert']), ('1000', ['thousand', 'tausend']), ('10000', ['ten thousand', 'zehntausend'])])

    >>> infilename = os.path.join(testdatadir, 'test2.csv')
    >>> c2v = api.CSV2VDEX('test', infilename, 'test1.xml', startrow=1, 
    ...                    langs=['en', 'de'])
    >>> c2v._csvdict
    OrderedDict([('100', (OrderedDict([('1', (OrderedDict(), ['one', 'eins'])), 
    ('2', (OrderedDict(), ['two', 'zwei']))]), ['hundered', 'hundert'])), 
    ('1000', (OrderedDict([('a', (OrderedDict(), ['A', 'A'])), 
    ('b', (OrderedDict(), ['B', 'B']))]), ['thousand', 'tausend'])), 
    ('10000', (OrderedDict([('X', (OrderedDict([('YZ', (OrderedDict(), 
    ['YZ', 'YZ'])), ('123', (OrderedDict(), ['one two three', 
    'eins zwei drei']))]), ['ex', 'ix'])), ('Y', (OrderedDict(), ['epsilon', 
    'ypsilon']))]), ['ten thousand', 'zehntausend']))])
    
    
Get the XML::

    >>> c2v() 
